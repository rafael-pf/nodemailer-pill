version: '3'
services:
  server:
    build:
      context: .
      dockerfile: dev.Dockerfile
    image: nodejs-server
    container_name: ${PROJECT_NAME}-server
    restart: unless-stopped
    env_file: .env
    ports:
      - '${SERVER_PORT}:3001'
    depends_on:
      - db
      - test-db
    develop:
      watch:
        - action: sync
          path: ./
          target: /home/node/app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  db:
    image: postgres
    container_name: ${PROJECT_NAME}-db
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - '${DATABASE_PORT}:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  test-db:
    image: postgres
    container_name: ${PROJECT_NAME}-test-db
    env_file: .env
    environment:
      - POSTGRES_USER=${DATABASE_TEST_USER}
      - POSTGRES_PASSWORD=${DATABASE_TEST_PASSWORD}
      - POSTGRES_DB=${DATABASE_TEST_DB}
    ports:
      - '${DATABASE_TEST_PORT}:5432'

volumes:
  pgdata:
  node_modules:

    # Documentação usada para a construção desse arquivo
    # https://www.digitalocean.com/community/tutorials/containerizing-a-node-js-application-for-development-with-docker-compose-pt
    # (principalmente o passo 4)
